#pragma warning(disable: 4100)
#pragma once
#include "../shared/include/DataCollect.h"
#include "../shared/include/ThostFtdcUserApiDataType.h"
#include "../shared/include/ThostFtdcUserApiStruct.h"
#include "../shared/include/ThostFtdcTraderApi.h"
#include "../shared/include/ThostFtdcMdApi.h"
class Rust_CThostFtdcMdSpi : CThostFtdcMdSpi {
public:
	static CThostFtdcMdSpi* Create(void * trait);
	static void Destroy(CThostFtdcMdSpi* ptr);
	void OnFrontConnected();
	void OnFrontDisconnected(int nReason);
	void OnHeartBeatWarning(int nTimeLapse);
	void OnRspUserLogin(CThostFtdcRspUserLoginField * pRspUserLogin, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspUserLogout(CThostFtdcUserLogoutField * pUserLogout, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryMulticastInstrument(CThostFtdcMulticastInstrumentField * pMulticastInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspError(CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspSubMarketData(CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspSubForQuoteRsp(CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspUnSubForQuoteRsp(CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRtnDepthMarketData(CThostFtdcDepthMarketDataField * pDepthMarketData);
	void OnRtnForQuoteRsp(CThostFtdcForQuoteRspField * pForQuoteRsp);
private:
	void * rust = nullptr;
};

extern "C" void Rust_CThostFtdcMdSpi_Trait_OnFrontConnected(void * rust);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnFrontDisconnected(void * rust, int nReason);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnHeartBeatWarning(void * rust, int nTimeLapse);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnRspUserLogin(void * rust, CThostFtdcRspUserLoginField * pRspUserLogin, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnRspUserLogout(void * rust, CThostFtdcUserLogoutField * pUserLogout, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnRspQryMulticastInstrument(void * rust, CThostFtdcMulticastInstrumentField * pMulticastInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnRspError(void * rust, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnRspSubMarketData(void * rust, CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnRspUnSubMarketData(void * rust, CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnRspSubForQuoteRsp(void * rust, CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnRspUnSubForQuoteRsp(void * rust, CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnRtnDepthMarketData(void * rust, CThostFtdcDepthMarketDataField * pDepthMarketData);
extern "C" void Rust_CThostFtdcMdSpi_Trait_OnRtnForQuoteRsp(void * rust, CThostFtdcForQuoteRspField * pForQuoteRsp);

class Rust_CThostFtdcMdApi {
public:
	static Rust_CThostFtdcMdApi* CreateFtdcMdApi(const char * pszFlowPath, const bool bIsUsingUdp, const bool bIsMulticast);
	static const char * GetApiVersion();
	void Release();
	void Init();
	int Join();
	const char * GetTradingDay();
	void RegisterFront(char * pszFrontAddress);
	void RegisterNameServer(char * pszNsAddress);
	void RegisterFensUserInfo(CThostFtdcFensUserInfoField * pFensUserInfo);
	void RegisterSpi(CThostFtdcMdSpi * pSpi);
	int SubscribeMarketData(char * ppInstrumentID[], int nCount);
	int UnSubscribeMarketData(char * ppInstrumentID[], int nCount);
	int SubscribeForQuoteRsp(char * ppInstrumentID[], int nCount);
	int UnSubscribeForQuoteRsp(char * ppInstrumentID[], int nCount);
	int ReqUserLogin(CThostFtdcReqUserLoginField * pReqUserLoginField, int nRequestID);
	int ReqUserLogout(CThostFtdcUserLogoutField * pUserLogout, int nRequestID);
	int ReqQryMulticastInstrument(CThostFtdcQryMulticastInstrumentField * pQryMulticastInstrument, int nRequestID);
private:
	CThostFtdcMdApi * inner = nullptr;
};


class Rust_CThostFtdcTraderSpi : CThostFtdcTraderSpi {
public:
	static CThostFtdcTraderSpi* Create(void * trait);
	static void Destroy(CThostFtdcTraderSpi* ptr);
	void OnFrontConnected();
	void OnFrontDisconnected(int nReason);
	void OnHeartBeatWarning(int nTimeLapse);
	void OnRspAuthenticate(CThostFtdcRspAuthenticateField * pRspAuthenticateField, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspUserLogin(CThostFtdcRspUserLoginField * pRspUserLogin, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspUserLogout(CThostFtdcUserLogoutField * pUserLogout, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspUserPasswordUpdate(CThostFtdcUserPasswordUpdateField * pUserPasswordUpdate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField * pTradingAccountPasswordUpdate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspUserAuthMethod(CThostFtdcRspUserAuthMethodField * pRspUserAuthMethod, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspGenUserCaptcha(CThostFtdcRspGenUserCaptchaField * pRspGenUserCaptcha, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspGenUserText(CThostFtdcRspGenUserTextField * pRspGenUserText, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspOrderInsert(CThostFtdcInputOrderField * pInputOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspParkedOrderInsert(CThostFtdcParkedOrderField * pParkedOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspParkedOrderAction(CThostFtdcParkedOrderActionField * pParkedOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspOrderAction(CThostFtdcInputOrderActionField * pInputOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryMaxOrderVolume(CThostFtdcQryMaxOrderVolumeField * pQryMaxOrderVolume, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField * pSettlementInfoConfirm, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspRemoveParkedOrder(CThostFtdcRemoveParkedOrderField * pRemoveParkedOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField * pRemoveParkedOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspExecOrderInsert(CThostFtdcInputExecOrderField * pInputExecOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspExecOrderAction(CThostFtdcInputExecOrderActionField * pInputExecOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspForQuoteInsert(CThostFtdcInputForQuoteField * pInputForQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQuoteInsert(CThostFtdcInputQuoteField * pInputQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQuoteAction(CThostFtdcInputQuoteActionField * pInputQuoteAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspBatchOrderAction(CThostFtdcInputBatchOrderActionField * pInputBatchOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField * pInputOptionSelfClose, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspOptionSelfCloseAction(CThostFtdcInputOptionSelfCloseActionField * pInputOptionSelfCloseAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspCombActionInsert(CThostFtdcInputCombActionField * pInputCombAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryOrder(CThostFtdcOrderField * pOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryTrade(CThostFtdcTradeField * pTrade, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInvestorPosition(CThostFtdcInvestorPositionField * pInvestorPosition, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryTradingAccount(CThostFtdcTradingAccountField * pTradingAccount, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInvestor(CThostFtdcInvestorField * pInvestor, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryTradingCode(CThostFtdcTradingCodeField * pTradingCode, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInstrumentMarginRate(CThostFtdcInstrumentMarginRateField * pInstrumentMarginRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInstrumentCommissionRate(CThostFtdcInstrumentCommissionRateField * pInstrumentCommissionRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryExchange(CThostFtdcExchangeField * pExchange, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryProduct(CThostFtdcProductField * pProduct, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInstrument(CThostFtdcInstrumentField * pInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryDepthMarketData(CThostFtdcDepthMarketDataField * pDepthMarketData, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryTraderOffer(CThostFtdcTraderOfferField * pTraderOffer, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySettlementInfo(CThostFtdcSettlementInfoField * pSettlementInfo, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryTransferBank(CThostFtdcTransferBankField * pTransferBank, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInvestorPositionDetail(CThostFtdcInvestorPositionDetailField * pInvestorPositionDetail, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryNotice(CThostFtdcNoticeField * pNotice, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField * pSettlementInfoConfirm, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInvestorPositionCombineDetail(CThostFtdcInvestorPositionCombineDetailField * pInvestorPositionCombineDetail, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryCFMMCTradingAccountKey(CThostFtdcCFMMCTradingAccountKeyField * pCFMMCTradingAccountKey, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryEWarrantOffset(CThostFtdcEWarrantOffsetField * pEWarrantOffset, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInvestorProductGroupMargin(CThostFtdcInvestorProductGroupMarginField * pInvestorProductGroupMargin, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryExchangeMarginRate(CThostFtdcExchangeMarginRateField * pExchangeMarginRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryExchangeMarginRateAdjust(CThostFtdcExchangeMarginRateAdjustField * pExchangeMarginRateAdjust, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryExchangeRate(CThostFtdcExchangeRateField * pExchangeRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySecAgentACIDMap(CThostFtdcSecAgentACIDMapField * pSecAgentACIDMap, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryProductExchRate(CThostFtdcProductExchRateField * pProductExchRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryProductGroup(CThostFtdcProductGroupField * pProductGroup, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryMMInstrumentCommissionRate(CThostFtdcMMInstrumentCommissionRateField * pMMInstrumentCommissionRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryMMOptionInstrCommRate(CThostFtdcMMOptionInstrCommRateField * pMMOptionInstrCommRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInstrumentOrderCommRate(CThostFtdcInstrumentOrderCommRateField * pInstrumentOrderCommRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySecAgentTradingAccount(CThostFtdcTradingAccountField * pTradingAccount, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySecAgentCheckMode(CThostFtdcSecAgentCheckModeField * pSecAgentCheckMode, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySecAgentTradeInfo(CThostFtdcSecAgentTradeInfoField * pSecAgentTradeInfo, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryOptionInstrTradeCost(CThostFtdcOptionInstrTradeCostField * pOptionInstrTradeCost, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryOptionInstrCommRate(CThostFtdcOptionInstrCommRateField * pOptionInstrCommRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryExecOrder(CThostFtdcExecOrderField * pExecOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryForQuote(CThostFtdcForQuoteField * pForQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryQuote(CThostFtdcQuoteField * pQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryOptionSelfClose(CThostFtdcOptionSelfCloseField * pOptionSelfClose, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInvestUnit(CThostFtdcInvestUnitField * pInvestUnit, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryCombInstrumentGuard(CThostFtdcCombInstrumentGuardField * pCombInstrumentGuard, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryCombAction(CThostFtdcCombActionField * pCombAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryTransferSerial(CThostFtdcTransferSerialField * pTransferSerial, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryAccountregister(CThostFtdcAccountregisterField * pAccountregister, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspError(CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRtnOrder(CThostFtdcOrderField * pOrder);
	void OnRtnTrade(CThostFtdcTradeField * pTrade);
	void OnErrRtnOrderInsert(CThostFtdcInputOrderField * pInputOrder, CThostFtdcRspInfoField * pRspInfo);
	void OnErrRtnOrderAction(CThostFtdcOrderActionField * pOrderAction, CThostFtdcRspInfoField * pRspInfo);
	void OnRtnInstrumentStatus(CThostFtdcInstrumentStatusField * pInstrumentStatus);
	void OnRtnBulletin(CThostFtdcBulletinField * pBulletin);
	void OnRtnTradingNotice(CThostFtdcTradingNoticeInfoField * pTradingNoticeInfo);
	void OnRtnErrorConditionalOrder(CThostFtdcErrorConditionalOrderField * pErrorConditionalOrder);
	void OnRtnExecOrder(CThostFtdcExecOrderField * pExecOrder);
	void OnErrRtnExecOrderInsert(CThostFtdcInputExecOrderField * pInputExecOrder, CThostFtdcRspInfoField * pRspInfo);
	void OnErrRtnExecOrderAction(CThostFtdcExecOrderActionField * pExecOrderAction, CThostFtdcRspInfoField * pRspInfo);
	void OnErrRtnForQuoteInsert(CThostFtdcInputForQuoteField * pInputForQuote, CThostFtdcRspInfoField * pRspInfo);
	void OnRtnQuote(CThostFtdcQuoteField * pQuote);
	void OnErrRtnQuoteInsert(CThostFtdcInputQuoteField * pInputQuote, CThostFtdcRspInfoField * pRspInfo);
	void OnErrRtnQuoteAction(CThostFtdcQuoteActionField * pQuoteAction, CThostFtdcRspInfoField * pRspInfo);
	void OnRtnForQuoteRsp(CThostFtdcForQuoteRspField * pForQuoteRsp);
	void OnRtnCFMMCTradingAccountToken(CThostFtdcCFMMCTradingAccountTokenField * pCFMMCTradingAccountToken);
	void OnErrRtnBatchOrderAction(CThostFtdcBatchOrderActionField * pBatchOrderAction, CThostFtdcRspInfoField * pRspInfo);
	void OnRtnOptionSelfClose(CThostFtdcOptionSelfCloseField * pOptionSelfClose);
	void OnErrRtnOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField * pInputOptionSelfClose, CThostFtdcRspInfoField * pRspInfo);
	void OnErrRtnOptionSelfCloseAction(CThostFtdcOptionSelfCloseActionField * pOptionSelfCloseAction, CThostFtdcRspInfoField * pRspInfo);
	void OnRtnCombAction(CThostFtdcCombActionField * pCombAction);
	void OnErrRtnCombActionInsert(CThostFtdcInputCombActionField * pInputCombAction, CThostFtdcRspInfoField * pRspInfo);
	void OnRspQryContractBank(CThostFtdcContractBankField * pContractBank, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryParkedOrder(CThostFtdcParkedOrderField * pParkedOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryParkedOrderAction(CThostFtdcParkedOrderActionField * pParkedOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryTradingNotice(CThostFtdcTradingNoticeField * pTradingNotice, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryBrokerTradingParams(CThostFtdcBrokerTradingParamsField * pBrokerTradingParams, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryBrokerTradingAlgos(CThostFtdcBrokerTradingAlgosField * pBrokerTradingAlgos, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField * pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRtnFromBankToFutureByBank(CThostFtdcRspTransferField * pRspTransfer);
	void OnRtnFromFutureToBankByBank(CThostFtdcRspTransferField * pRspTransfer);
	void OnRtnRepealFromBankToFutureByBank(CThostFtdcRspRepealField * pRspRepeal);
	void OnRtnRepealFromFutureToBankByBank(CThostFtdcRspRepealField * pRspRepeal);
	void OnRtnFromBankToFutureByFuture(CThostFtdcRspTransferField * pRspTransfer);
	void OnRtnFromFutureToBankByFuture(CThostFtdcRspTransferField * pRspTransfer);
	void OnRtnRepealFromBankToFutureByFutureManual(CThostFtdcRspRepealField * pRspRepeal);
	void OnRtnRepealFromFutureToBankByFutureManual(CThostFtdcRspRepealField * pRspRepeal);
	void OnRtnQueryBankBalanceByFuture(CThostFtdcNotifyQueryAccountField * pNotifyQueryAccount);
	void OnErrRtnBankToFutureByFuture(CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo);
	void OnErrRtnFutureToBankByFuture(CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo);
	void OnErrRtnRepealBankToFutureByFutureManual(CThostFtdcReqRepealField * pReqRepeal, CThostFtdcRspInfoField * pRspInfo);
	void OnErrRtnRepealFutureToBankByFutureManual(CThostFtdcReqRepealField * pReqRepeal, CThostFtdcRspInfoField * pRspInfo);
	void OnErrRtnQueryBankBalanceByFuture(CThostFtdcReqQueryAccountField * pReqQueryAccount, CThostFtdcRspInfoField * pRspInfo);
	void OnRtnRepealFromBankToFutureByFuture(CThostFtdcRspRepealField * pRspRepeal);
	void OnRtnRepealFromFutureToBankByFuture(CThostFtdcRspRepealField * pRspRepeal);
	void OnRspFromBankToFutureByFuture(CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspFromFutureToBankByFuture(CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField * pReqQueryAccount, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRtnOpenAccountByBank(CThostFtdcOpenAccountField * pOpenAccount);
	void OnRtnCancelAccountByBank(CThostFtdcCancelAccountField * pCancelAccount);
	void OnRtnChangeAccountByBank(CThostFtdcChangeAccountField * pChangeAccount);
	void OnRspQryClassifiedInstrument(CThostFtdcInstrumentField * pInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryCombPromotionParam(CThostFtdcCombPromotionParamField * pCombPromotionParam, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryRiskSettleInvstPosition(CThostFtdcRiskSettleInvstPositionField * pRiskSettleInvstPosition, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryRiskSettleProductStatus(CThostFtdcRiskSettleProductStatusField * pRiskSettleProductStatus, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySPBMFutureParameter(CThostFtdcSPBMFutureParameterField * pSPBMFutureParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySPBMOptionParameter(CThostFtdcSPBMOptionParameterField * pSPBMOptionParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySPBMIntraParameter(CThostFtdcSPBMIntraParameterField * pSPBMIntraParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySPBMInterParameter(CThostFtdcSPBMInterParameterField * pSPBMInterParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySPBMPortfDefinition(CThostFtdcSPBMPortfDefinitionField * pSPBMPortfDefinition, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQrySPBMInvestorPortfDef(CThostFtdcSPBMInvestorPortfDefField * pSPBMInvestorPortfDef, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInvestorPortfMarginRatio(CThostFtdcInvestorPortfMarginRatioField * pInvestorPortfMarginRatio, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
	void OnRspQryInvestorProdSPBMDetail(CThostFtdcInvestorProdSPBMDetailField * pInvestorProdSPBMDetail, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
private:
	void * rust = nullptr;
};

extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnFrontConnected(void * rust);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnFrontDisconnected(void * rust, int nReason);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnHeartBeatWarning(void * rust, int nTimeLapse);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspAuthenticate(void * rust, CThostFtdcRspAuthenticateField * pRspAuthenticateField, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspUserLogin(void * rust, CThostFtdcRspUserLoginField * pRspUserLogin, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspUserLogout(void * rust, CThostFtdcUserLogoutField * pUserLogout, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspUserPasswordUpdate(void * rust, CThostFtdcUserPasswordUpdateField * pUserPasswordUpdate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspTradingAccountPasswordUpdate(void * rust, CThostFtdcTradingAccountPasswordUpdateField * pTradingAccountPasswordUpdate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspUserAuthMethod(void * rust, CThostFtdcRspUserAuthMethodField * pRspUserAuthMethod, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspGenUserCaptcha(void * rust, CThostFtdcRspGenUserCaptchaField * pRspGenUserCaptcha, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspGenUserText(void * rust, CThostFtdcRspGenUserTextField * pRspGenUserText, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspOrderInsert(void * rust, CThostFtdcInputOrderField * pInputOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspParkedOrderInsert(void * rust, CThostFtdcParkedOrderField * pParkedOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspParkedOrderAction(void * rust, CThostFtdcParkedOrderActionField * pParkedOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspOrderAction(void * rust, CThostFtdcInputOrderActionField * pInputOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryMaxOrderVolume(void * rust, CThostFtdcQryMaxOrderVolumeField * pQryMaxOrderVolume, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspSettlementInfoConfirm(void * rust, CThostFtdcSettlementInfoConfirmField * pSettlementInfoConfirm, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspRemoveParkedOrder(void * rust, CThostFtdcRemoveParkedOrderField * pRemoveParkedOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspRemoveParkedOrderAction(void * rust, CThostFtdcRemoveParkedOrderActionField * pRemoveParkedOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspExecOrderInsert(void * rust, CThostFtdcInputExecOrderField * pInputExecOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspExecOrderAction(void * rust, CThostFtdcInputExecOrderActionField * pInputExecOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspForQuoteInsert(void * rust, CThostFtdcInputForQuoteField * pInputForQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQuoteInsert(void * rust, CThostFtdcInputQuoteField * pInputQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQuoteAction(void * rust, CThostFtdcInputQuoteActionField * pInputQuoteAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspBatchOrderAction(void * rust, CThostFtdcInputBatchOrderActionField * pInputBatchOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspOptionSelfCloseInsert(void * rust, CThostFtdcInputOptionSelfCloseField * pInputOptionSelfClose, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspOptionSelfCloseAction(void * rust, CThostFtdcInputOptionSelfCloseActionField * pInputOptionSelfCloseAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspCombActionInsert(void * rust, CThostFtdcInputCombActionField * pInputCombAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryOrder(void * rust, CThostFtdcOrderField * pOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryTrade(void * rust, CThostFtdcTradeField * pTrade, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPosition(void * rust, CThostFtdcInvestorPositionField * pInvestorPosition, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryTradingAccount(void * rust, CThostFtdcTradingAccountField * pTradingAccount, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestor(void * rust, CThostFtdcInvestorField * pInvestor, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryTradingCode(void * rust, CThostFtdcTradingCodeField * pTradingCode, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrumentMarginRate(void * rust, CThostFtdcInstrumentMarginRateField * pInstrumentMarginRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrumentCommissionRate(void * rust, CThostFtdcInstrumentCommissionRateField * pInstrumentCommissionRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchange(void * rust, CThostFtdcExchangeField * pExchange, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryProduct(void * rust, CThostFtdcProductField * pProduct, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrument(void * rust, CThostFtdcInstrumentField * pInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryDepthMarketData(void * rust, CThostFtdcDepthMarketDataField * pDepthMarketData, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryTraderOffer(void * rust, CThostFtdcTraderOfferField * pTraderOffer, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySettlementInfo(void * rust, CThostFtdcSettlementInfoField * pSettlementInfo, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryTransferBank(void * rust, CThostFtdcTransferBankField * pTransferBank, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPositionDetail(void * rust, CThostFtdcInvestorPositionDetailField * pInvestorPositionDetail, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryNotice(void * rust, CThostFtdcNoticeField * pNotice, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySettlementInfoConfirm(void * rust, CThostFtdcSettlementInfoConfirmField * pSettlementInfoConfirm, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPositionCombineDetail(void * rust, CThostFtdcInvestorPositionCombineDetailField * pInvestorPositionCombineDetail, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryCFMMCTradingAccountKey(void * rust, CThostFtdcCFMMCTradingAccountKeyField * pCFMMCTradingAccountKey, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryEWarrantOffset(void * rust, CThostFtdcEWarrantOffsetField * pEWarrantOffset, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorProductGroupMargin(void * rust, CThostFtdcInvestorProductGroupMarginField * pInvestorProductGroupMargin, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchangeMarginRate(void * rust, CThostFtdcExchangeMarginRateField * pExchangeMarginRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchangeMarginRateAdjust(void * rust, CThostFtdcExchangeMarginRateAdjustField * pExchangeMarginRateAdjust, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchangeRate(void * rust, CThostFtdcExchangeRateField * pExchangeRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentACIDMap(void * rust, CThostFtdcSecAgentACIDMapField * pSecAgentACIDMap, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryProductExchRate(void * rust, CThostFtdcProductExchRateField * pProductExchRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryProductGroup(void * rust, CThostFtdcProductGroupField * pProductGroup, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryMMInstrumentCommissionRate(void * rust, CThostFtdcMMInstrumentCommissionRateField * pMMInstrumentCommissionRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryMMOptionInstrCommRate(void * rust, CThostFtdcMMOptionInstrCommRateField * pMMOptionInstrCommRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrumentOrderCommRate(void * rust, CThostFtdcInstrumentOrderCommRateField * pInstrumentOrderCommRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentTradingAccount(void * rust, CThostFtdcTradingAccountField * pTradingAccount, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentCheckMode(void * rust, CThostFtdcSecAgentCheckModeField * pSecAgentCheckMode, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentTradeInfo(void * rust, CThostFtdcSecAgentTradeInfoField * pSecAgentTradeInfo, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryOptionInstrTradeCost(void * rust, CThostFtdcOptionInstrTradeCostField * pOptionInstrTradeCost, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryOptionInstrCommRate(void * rust, CThostFtdcOptionInstrCommRateField * pOptionInstrCommRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryExecOrder(void * rust, CThostFtdcExecOrderField * pExecOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryForQuote(void * rust, CThostFtdcForQuoteField * pForQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryQuote(void * rust, CThostFtdcQuoteField * pQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryOptionSelfClose(void * rust, CThostFtdcOptionSelfCloseField * pOptionSelfClose, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestUnit(void * rust, CThostFtdcInvestUnitField * pInvestUnit, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryCombInstrumentGuard(void * rust, CThostFtdcCombInstrumentGuardField * pCombInstrumentGuard, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryCombAction(void * rust, CThostFtdcCombActionField * pCombAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryTransferSerial(void * rust, CThostFtdcTransferSerialField * pTransferSerial, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryAccountregister(void * rust, CThostFtdcAccountregisterField * pAccountregister, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspError(void * rust, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnOrder(void * rust, CThostFtdcOrderField * pOrder);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnTrade(void * rust, CThostFtdcTradeField * pTrade);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOrderInsert(void * rust, CThostFtdcInputOrderField * pInputOrder, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOrderAction(void * rust, CThostFtdcOrderActionField * pOrderAction, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnInstrumentStatus(void * rust, CThostFtdcInstrumentStatusField * pInstrumentStatus);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnBulletin(void * rust, CThostFtdcBulletinField * pBulletin);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnTradingNotice(void * rust, CThostFtdcTradingNoticeInfoField * pTradingNoticeInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnErrorConditionalOrder(void * rust, CThostFtdcErrorConditionalOrderField * pErrorConditionalOrder);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnExecOrder(void * rust, CThostFtdcExecOrderField * pExecOrder);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnExecOrderInsert(void * rust, CThostFtdcInputExecOrderField * pInputExecOrder, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnExecOrderAction(void * rust, CThostFtdcExecOrderActionField * pExecOrderAction, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnForQuoteInsert(void * rust, CThostFtdcInputForQuoteField * pInputForQuote, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnQuote(void * rust, CThostFtdcQuoteField * pQuote);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnQuoteInsert(void * rust, CThostFtdcInputQuoteField * pInputQuote, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnQuoteAction(void * rust, CThostFtdcQuoteActionField * pQuoteAction, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnForQuoteRsp(void * rust, CThostFtdcForQuoteRspField * pForQuoteRsp);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnCFMMCTradingAccountToken(void * rust, CThostFtdcCFMMCTradingAccountTokenField * pCFMMCTradingAccountToken);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnBatchOrderAction(void * rust, CThostFtdcBatchOrderActionField * pBatchOrderAction, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnOptionSelfClose(void * rust, CThostFtdcOptionSelfCloseField * pOptionSelfClose);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOptionSelfCloseInsert(void * rust, CThostFtdcInputOptionSelfCloseField * pInputOptionSelfClose, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOptionSelfCloseAction(void * rust, CThostFtdcOptionSelfCloseActionField * pOptionSelfCloseAction, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnCombAction(void * rust, CThostFtdcCombActionField * pCombAction);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnCombActionInsert(void * rust, CThostFtdcInputCombActionField * pInputCombAction, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryContractBank(void * rust, CThostFtdcContractBankField * pContractBank, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryParkedOrder(void * rust, CThostFtdcParkedOrderField * pParkedOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryParkedOrderAction(void * rust, CThostFtdcParkedOrderActionField * pParkedOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryTradingNotice(void * rust, CThostFtdcTradingNoticeField * pTradingNotice, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryBrokerTradingParams(void * rust, CThostFtdcBrokerTradingParamsField * pBrokerTradingParams, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryBrokerTradingAlgos(void * rust, CThostFtdcBrokerTradingAlgosField * pBrokerTradingAlgos, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQueryCFMMCTradingAccountToken(void * rust, CThostFtdcQueryCFMMCTradingAccountTokenField * pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnFromBankToFutureByBank(void * rust, CThostFtdcRspTransferField * pRspTransfer);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnFromFutureToBankByBank(void * rust, CThostFtdcRspTransferField * pRspTransfer);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromBankToFutureByBank(void * rust, CThostFtdcRspRepealField * pRspRepeal);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromFutureToBankByBank(void * rust, CThostFtdcRspRepealField * pRspRepeal);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnFromBankToFutureByFuture(void * rust, CThostFtdcRspTransferField * pRspTransfer);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnFromFutureToBankByFuture(void * rust, CThostFtdcRspTransferField * pRspTransfer);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromBankToFutureByFutureManual(void * rust, CThostFtdcRspRepealField * pRspRepeal);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromFutureToBankByFutureManual(void * rust, CThostFtdcRspRepealField * pRspRepeal);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnQueryBankBalanceByFuture(void * rust, CThostFtdcNotifyQueryAccountField * pNotifyQueryAccount);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnBankToFutureByFuture(void * rust, CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnFutureToBankByFuture(void * rust, CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnRepealBankToFutureByFutureManual(void * rust, CThostFtdcReqRepealField * pReqRepeal, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnRepealFutureToBankByFutureManual(void * rust, CThostFtdcReqRepealField * pReqRepeal, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnErrRtnQueryBankBalanceByFuture(void * rust, CThostFtdcReqQueryAccountField * pReqQueryAccount, CThostFtdcRspInfoField * pRspInfo);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromBankToFutureByFuture(void * rust, CThostFtdcRspRepealField * pRspRepeal);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromFutureToBankByFuture(void * rust, CThostFtdcRspRepealField * pRspRepeal);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspFromBankToFutureByFuture(void * rust, CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspFromFutureToBankByFuture(void * rust, CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQueryBankAccountMoneyByFuture(void * rust, CThostFtdcReqQueryAccountField * pReqQueryAccount, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnOpenAccountByBank(void * rust, CThostFtdcOpenAccountField * pOpenAccount);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnCancelAccountByBank(void * rust, CThostFtdcCancelAccountField * pCancelAccount);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRtnChangeAccountByBank(void * rust, CThostFtdcChangeAccountField * pChangeAccount);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryClassifiedInstrument(void * rust, CThostFtdcInstrumentField * pInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryCombPromotionParam(void * rust, CThostFtdcCombPromotionParamField * pCombPromotionParam, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryRiskSettleInvstPosition(void * rust, CThostFtdcRiskSettleInvstPositionField * pRiskSettleInvstPosition, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryRiskSettleProductStatus(void * rust, CThostFtdcRiskSettleProductStatusField * pRiskSettleProductStatus, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMFutureParameter(void * rust, CThostFtdcSPBMFutureParameterField * pSPBMFutureParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMOptionParameter(void * rust, CThostFtdcSPBMOptionParameterField * pSPBMOptionParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMIntraParameter(void * rust, CThostFtdcSPBMIntraParameterField * pSPBMIntraParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMInterParameter(void * rust, CThostFtdcSPBMInterParameterField * pSPBMInterParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMPortfDefinition(void * rust, CThostFtdcSPBMPortfDefinitionField * pSPBMPortfDefinition, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMInvestorPortfDef(void * rust, CThostFtdcSPBMInvestorPortfDefField * pSPBMInvestorPortfDef, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPortfMarginRatio(void * rust, CThostFtdcInvestorPortfMarginRatioField * pInvestorPortfMarginRatio, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);
extern "C" void Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorProdSPBMDetail(void * rust, CThostFtdcInvestorProdSPBMDetailField * pInvestorProdSPBMDetail, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast);

class Rust_CThostFtdcTraderApi {
public:
	static Rust_CThostFtdcTraderApi* CreateFtdcTraderApi(const char * pszFlowPath);
	static const char * GetApiVersion();
	void Release();
	void Init();
	int Join();
	const char * GetTradingDay();
	void RegisterFront(char * pszFrontAddress);
	void RegisterNameServer(char * pszNsAddress);
	void RegisterFensUserInfo(CThostFtdcFensUserInfoField * pFensUserInfo);
	void RegisterSpi(CThostFtdcTraderSpi * pSpi);
	void SubscribePrivateTopic(THOST_TE_RESUME_TYPE nResumeType);
	void SubscribePublicTopic(THOST_TE_RESUME_TYPE nResumeType);
	int ReqAuthenticate(CThostFtdcReqAuthenticateField * pReqAuthenticateField, int nRequestID);
	int RegisterUserSystemInfo(CThostFtdcUserSystemInfoField * pUserSystemInfo);
	int SubmitUserSystemInfo(CThostFtdcUserSystemInfoField * pUserSystemInfo);
	int ReqUserLogin(CThostFtdcReqUserLoginField * pReqUserLoginField, int nRequestID);
	int ReqUserLogout(CThostFtdcUserLogoutField * pUserLogout, int nRequestID);
	int ReqUserPasswordUpdate(CThostFtdcUserPasswordUpdateField * pUserPasswordUpdate, int nRequestID);
	int ReqTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField * pTradingAccountPasswordUpdate, int nRequestID);
	int ReqUserAuthMethod(CThostFtdcReqUserAuthMethodField * pReqUserAuthMethod, int nRequestID);
	int ReqGenUserCaptcha(CThostFtdcReqGenUserCaptchaField * pReqGenUserCaptcha, int nRequestID);
	int ReqGenUserText(CThostFtdcReqGenUserTextField * pReqGenUserText, int nRequestID);
	int ReqUserLoginWithCaptcha(CThostFtdcReqUserLoginWithCaptchaField * pReqUserLoginWithCaptcha, int nRequestID);
	int ReqUserLoginWithText(CThostFtdcReqUserLoginWithTextField * pReqUserLoginWithText, int nRequestID);
	int ReqUserLoginWithOTP(CThostFtdcReqUserLoginWithOTPField * pReqUserLoginWithOTP, int nRequestID);
	int ReqOrderInsert(CThostFtdcInputOrderField * pInputOrder, int nRequestID);
	int ReqParkedOrderInsert(CThostFtdcParkedOrderField * pParkedOrder, int nRequestID);
	int ReqParkedOrderAction(CThostFtdcParkedOrderActionField * pParkedOrderAction, int nRequestID);
	int ReqOrderAction(CThostFtdcInputOrderActionField * pInputOrderAction, int nRequestID);
	int ReqQryMaxOrderVolume(CThostFtdcQryMaxOrderVolumeField * pQryMaxOrderVolume, int nRequestID);
	int ReqSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField * pSettlementInfoConfirm, int nRequestID);
	int ReqRemoveParkedOrder(CThostFtdcRemoveParkedOrderField * pRemoveParkedOrder, int nRequestID);
	int ReqRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField * pRemoveParkedOrderAction, int nRequestID);
	int ReqExecOrderInsert(CThostFtdcInputExecOrderField * pInputExecOrder, int nRequestID);
	int ReqExecOrderAction(CThostFtdcInputExecOrderActionField * pInputExecOrderAction, int nRequestID);
	int ReqForQuoteInsert(CThostFtdcInputForQuoteField * pInputForQuote, int nRequestID);
	int ReqQuoteInsert(CThostFtdcInputQuoteField * pInputQuote, int nRequestID);
	int ReqQuoteAction(CThostFtdcInputQuoteActionField * pInputQuoteAction, int nRequestID);
	int ReqBatchOrderAction(CThostFtdcInputBatchOrderActionField * pInputBatchOrderAction, int nRequestID);
	int ReqOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField * pInputOptionSelfClose, int nRequestID);
	int ReqOptionSelfCloseAction(CThostFtdcInputOptionSelfCloseActionField * pInputOptionSelfCloseAction, int nRequestID);
	int ReqCombActionInsert(CThostFtdcInputCombActionField * pInputCombAction, int nRequestID);
	int ReqQryOrder(CThostFtdcQryOrderField * pQryOrder, int nRequestID);
	int ReqQryTrade(CThostFtdcQryTradeField * pQryTrade, int nRequestID);
	int ReqQryInvestorPosition(CThostFtdcQryInvestorPositionField * pQryInvestorPosition, int nRequestID);
	int ReqQryTradingAccount(CThostFtdcQryTradingAccountField * pQryTradingAccount, int nRequestID);
	int ReqQryInvestor(CThostFtdcQryInvestorField * pQryInvestor, int nRequestID);
	int ReqQryTradingCode(CThostFtdcQryTradingCodeField * pQryTradingCode, int nRequestID);
	int ReqQryInstrumentMarginRate(CThostFtdcQryInstrumentMarginRateField * pQryInstrumentMarginRate, int nRequestID);
	int ReqQryInstrumentCommissionRate(CThostFtdcQryInstrumentCommissionRateField * pQryInstrumentCommissionRate, int nRequestID);
	int ReqQryExchange(CThostFtdcQryExchangeField * pQryExchange, int nRequestID);
	int ReqQryProduct(CThostFtdcQryProductField * pQryProduct, int nRequestID);
	int ReqQryInstrument(CThostFtdcQryInstrumentField * pQryInstrument, int nRequestID);
	int ReqQryDepthMarketData(CThostFtdcQryDepthMarketDataField * pQryDepthMarketData, int nRequestID);
	int ReqQryTraderOffer(CThostFtdcQryTraderOfferField * pQryTraderOffer, int nRequestID);
	int ReqQrySettlementInfo(CThostFtdcQrySettlementInfoField * pQrySettlementInfo, int nRequestID);
	int ReqQryTransferBank(CThostFtdcQryTransferBankField * pQryTransferBank, int nRequestID);
	int ReqQryInvestorPositionDetail(CThostFtdcQryInvestorPositionDetailField * pQryInvestorPositionDetail, int nRequestID);
	int ReqQryNotice(CThostFtdcQryNoticeField * pQryNotice, int nRequestID);
	int ReqQrySettlementInfoConfirm(CThostFtdcQrySettlementInfoConfirmField * pQrySettlementInfoConfirm, int nRequestID);
	int ReqQryInvestorPositionCombineDetail(CThostFtdcQryInvestorPositionCombineDetailField * pQryInvestorPositionCombineDetail, int nRequestID);
	int ReqQryCFMMCTradingAccountKey(CThostFtdcQryCFMMCTradingAccountKeyField * pQryCFMMCTradingAccountKey, int nRequestID);
	int ReqQryEWarrantOffset(CThostFtdcQryEWarrantOffsetField * pQryEWarrantOffset, int nRequestID);
	int ReqQryInvestorProductGroupMargin(CThostFtdcQryInvestorProductGroupMarginField * pQryInvestorProductGroupMargin, int nRequestID);
	int ReqQryExchangeMarginRate(CThostFtdcQryExchangeMarginRateField * pQryExchangeMarginRate, int nRequestID);
	int ReqQryExchangeMarginRateAdjust(CThostFtdcQryExchangeMarginRateAdjustField * pQryExchangeMarginRateAdjust, int nRequestID);
	int ReqQryExchangeRate(CThostFtdcQryExchangeRateField * pQryExchangeRate, int nRequestID);
	int ReqQrySecAgentACIDMap(CThostFtdcQrySecAgentACIDMapField * pQrySecAgentACIDMap, int nRequestID);
	int ReqQryProductExchRate(CThostFtdcQryProductExchRateField * pQryProductExchRate, int nRequestID);
	int ReqQryProductGroup(CThostFtdcQryProductGroupField * pQryProductGroup, int nRequestID);
	int ReqQryMMInstrumentCommissionRate(CThostFtdcQryMMInstrumentCommissionRateField * pQryMMInstrumentCommissionRate, int nRequestID);
	int ReqQryMMOptionInstrCommRate(CThostFtdcQryMMOptionInstrCommRateField * pQryMMOptionInstrCommRate, int nRequestID);
	int ReqQryInstrumentOrderCommRate(CThostFtdcQryInstrumentOrderCommRateField * pQryInstrumentOrderCommRate, int nRequestID);
	int ReqQrySecAgentTradingAccount(CThostFtdcQryTradingAccountField * pQryTradingAccount, int nRequestID);
	int ReqQrySecAgentCheckMode(CThostFtdcQrySecAgentCheckModeField * pQrySecAgentCheckMode, int nRequestID);
	int ReqQrySecAgentTradeInfo(CThostFtdcQrySecAgentTradeInfoField * pQrySecAgentTradeInfo, int nRequestID);
	int ReqQryOptionInstrTradeCost(CThostFtdcQryOptionInstrTradeCostField * pQryOptionInstrTradeCost, int nRequestID);
	int ReqQryOptionInstrCommRate(CThostFtdcQryOptionInstrCommRateField * pQryOptionInstrCommRate, int nRequestID);
	int ReqQryExecOrder(CThostFtdcQryExecOrderField * pQryExecOrder, int nRequestID);
	int ReqQryForQuote(CThostFtdcQryForQuoteField * pQryForQuote, int nRequestID);
	int ReqQryQuote(CThostFtdcQryQuoteField * pQryQuote, int nRequestID);
	int ReqQryOptionSelfClose(CThostFtdcQryOptionSelfCloseField * pQryOptionSelfClose, int nRequestID);
	int ReqQryInvestUnit(CThostFtdcQryInvestUnitField * pQryInvestUnit, int nRequestID);
	int ReqQryCombInstrumentGuard(CThostFtdcQryCombInstrumentGuardField * pQryCombInstrumentGuard, int nRequestID);
	int ReqQryCombAction(CThostFtdcQryCombActionField * pQryCombAction, int nRequestID);
	int ReqQryTransferSerial(CThostFtdcQryTransferSerialField * pQryTransferSerial, int nRequestID);
	int ReqQryAccountregister(CThostFtdcQryAccountregisterField * pQryAccountregister, int nRequestID);
	int ReqQryContractBank(CThostFtdcQryContractBankField * pQryContractBank, int nRequestID);
	int ReqQryParkedOrder(CThostFtdcQryParkedOrderField * pQryParkedOrder, int nRequestID);
	int ReqQryParkedOrderAction(CThostFtdcQryParkedOrderActionField * pQryParkedOrderAction, int nRequestID);
	int ReqQryTradingNotice(CThostFtdcQryTradingNoticeField * pQryTradingNotice, int nRequestID);
	int ReqQryBrokerTradingParams(CThostFtdcQryBrokerTradingParamsField * pQryBrokerTradingParams, int nRequestID);
	int ReqQryBrokerTradingAlgos(CThostFtdcQryBrokerTradingAlgosField * pQryBrokerTradingAlgos, int nRequestID);
	int ReqQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField * pQueryCFMMCTradingAccountToken, int nRequestID);
	int ReqFromBankToFutureByFuture(CThostFtdcReqTransferField * pReqTransfer, int nRequestID);
	int ReqFromFutureToBankByFuture(CThostFtdcReqTransferField * pReqTransfer, int nRequestID);
	int ReqQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField * pReqQueryAccount, int nRequestID);
	int ReqQryClassifiedInstrument(CThostFtdcQryClassifiedInstrumentField * pQryClassifiedInstrument, int nRequestID);
	int ReqQryCombPromotionParam(CThostFtdcQryCombPromotionParamField * pQryCombPromotionParam, int nRequestID);
	int ReqQryRiskSettleInvstPosition(CThostFtdcQryRiskSettleInvstPositionField * pQryRiskSettleInvstPosition, int nRequestID);
	int ReqQryRiskSettleProductStatus(CThostFtdcQryRiskSettleProductStatusField * pQryRiskSettleProductStatus, int nRequestID);
	int ReqQrySPBMFutureParameter(CThostFtdcQrySPBMFutureParameterField * pQrySPBMFutureParameter, int nRequestID);
	int ReqQrySPBMOptionParameter(CThostFtdcQrySPBMOptionParameterField * pQrySPBMOptionParameter, int nRequestID);
	int ReqQrySPBMIntraParameter(CThostFtdcQrySPBMIntraParameterField * pQrySPBMIntraParameter, int nRequestID);
	int ReqQrySPBMInterParameter(CThostFtdcQrySPBMInterParameterField * pQrySPBMInterParameter, int nRequestID);
	int ReqQrySPBMPortfDefinition(CThostFtdcQrySPBMPortfDefinitionField * pQrySPBMPortfDefinition, int nRequestID);
	int ReqQrySPBMInvestorPortfDef(CThostFtdcQrySPBMInvestorPortfDefField * pQrySPBMInvestorPortfDef, int nRequestID);
	int ReqQryInvestorPortfMarginRatio(CThostFtdcQryInvestorPortfMarginRatioField * pQryInvestorPortfMarginRatio, int nRequestID);
	int ReqQryInvestorProdSPBMDetail(CThostFtdcQryInvestorProdSPBMDetailField * pQryInvestorProdSPBMDetail, int nRequestID);
private:
	CThostFtdcTraderApi * inner = nullptr;
};

