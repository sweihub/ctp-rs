#include <iostream>
#include "wrapper.hpp"

CThostFtdcMdSpi* Rust_CThostFtdcMdSpi::Create(void * trait) { 
                Rust_CThostFtdcMdSpi* p = new Rust_CThostFtdcMdSpi();
                p->rust = trait;
                return p;
            }
void Rust_CThostFtdcMdSpi::Destroy(CThostFtdcMdSpi* ptr) { delete ptr; }
void Rust_CThostFtdcMdSpi::OnFrontConnected() { return Rust_CThostFtdcMdSpi_Trait_OnFrontConnected(rust); }
void Rust_CThostFtdcMdSpi::OnFrontDisconnected(int nReason) { return Rust_CThostFtdcMdSpi_Trait_OnFrontDisconnected(rust, nReason); }
void Rust_CThostFtdcMdSpi::OnHeartBeatWarning(int nTimeLapse) { return Rust_CThostFtdcMdSpi_Trait_OnHeartBeatWarning(rust, nTimeLapse); }
void Rust_CThostFtdcMdSpi::OnRspUserLogin(CThostFtdcRspUserLoginField * pRspUserLogin, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspUserLogin(rust, pRspUserLogin, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspUserLogout(CThostFtdcUserLogoutField * pUserLogout, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspUserLogout(rust, pUserLogout, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspQryMulticastInstrument(CThostFtdcMulticastInstrumentField * pMulticastInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspQryMulticastInstrument(rust, pMulticastInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspError(CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspError(rust, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspSubMarketData(CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspSubMarketData(rust, pSpecificInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspUnSubMarketData(rust, pSpecificInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspSubForQuoteRsp(CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspSubForQuoteRsp(rust, pSpecificInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspUnSubForQuoteRsp(CThostFtdcSpecificInstrumentField * pSpecificInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspUnSubForQuoteRsp(rust, pSpecificInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRtnDepthMarketData(CThostFtdcDepthMarketDataField * pDepthMarketData) { return Rust_CThostFtdcMdSpi_Trait_OnRtnDepthMarketData(rust, pDepthMarketData); }
void Rust_CThostFtdcMdSpi::OnRtnForQuoteRsp(CThostFtdcForQuoteRspField * pForQuoteRsp) { return Rust_CThostFtdcMdSpi_Trait_OnRtnForQuoteRsp(rust, pForQuoteRsp); }
Rust_CThostFtdcMdApi* Rust_CThostFtdcMdApi::CreateFtdcMdApi(const char * pszFlowPath, const bool bIsUsingUdp, const bool bIsMulticast) { 
                            Rust_CThostFtdcMdApi * self = new Rust_CThostFtdcMdApi();
                            self->inner = CThostFtdcMdApi::CreateFtdcMdApi(pszFlowPath, bIsUsingUdp, bIsMulticast);                        
                            return self;
                        }
const char * Rust_CThostFtdcMdApi::GetApiVersion() { return CThostFtdcMdApi::GetApiVersion(); }
void Rust_CThostFtdcMdApi::Release() { return inner->Release(); }
void Rust_CThostFtdcMdApi::Init() { return inner->Init(); }
int Rust_CThostFtdcMdApi::Join() { return inner->Join(); }
const char * Rust_CThostFtdcMdApi::GetTradingDay() { return inner->GetTradingDay(); }
void Rust_CThostFtdcMdApi::RegisterFront(char * pszFrontAddress) { return inner->RegisterFront(pszFrontAddress); }
void Rust_CThostFtdcMdApi::RegisterNameServer(char * pszNsAddress) { return inner->RegisterNameServer(pszNsAddress); }
void Rust_CThostFtdcMdApi::RegisterFensUserInfo(CThostFtdcFensUserInfoField * pFensUserInfo) { return inner->RegisterFensUserInfo(pFensUserInfo); }
void Rust_CThostFtdcMdApi::RegisterSpi(CThostFtdcMdSpi * pSpi) { return inner->RegisterSpi(pSpi); }
int Rust_CThostFtdcMdApi::SubscribeMarketData(char * ppInstrumentID[], int nCount) { return inner->SubscribeMarketData(ppInstrumentID, nCount); }
int Rust_CThostFtdcMdApi::UnSubscribeMarketData(char * ppInstrumentID[], int nCount) { return inner->UnSubscribeMarketData(ppInstrumentID, nCount); }
int Rust_CThostFtdcMdApi::SubscribeForQuoteRsp(char * ppInstrumentID[], int nCount) { return inner->SubscribeForQuoteRsp(ppInstrumentID, nCount); }
int Rust_CThostFtdcMdApi::UnSubscribeForQuoteRsp(char * ppInstrumentID[], int nCount) { return inner->UnSubscribeForQuoteRsp(ppInstrumentID, nCount); }
int Rust_CThostFtdcMdApi::ReqUserLogin(CThostFtdcReqUserLoginField * pReqUserLoginField, int nRequestID) { return inner->ReqUserLogin(pReqUserLoginField, nRequestID); }
int Rust_CThostFtdcMdApi::ReqUserLogout(CThostFtdcUserLogoutField * pUserLogout, int nRequestID) { return inner->ReqUserLogout(pUserLogout, nRequestID); }
int Rust_CThostFtdcMdApi::ReqQryMulticastInstrument(CThostFtdcQryMulticastInstrumentField * pQryMulticastInstrument, int nRequestID) { return inner->ReqQryMulticastInstrument(pQryMulticastInstrument, nRequestID); }
CThostFtdcTraderSpi* Rust_CThostFtdcTraderSpi::Create(void * trait) { 
                Rust_CThostFtdcTraderSpi* p = new Rust_CThostFtdcTraderSpi();
                p->rust = trait;
                return p;
            }
void Rust_CThostFtdcTraderSpi::Destroy(CThostFtdcTraderSpi* ptr) { delete ptr; }
void Rust_CThostFtdcTraderSpi::OnFrontConnected() { return Rust_CThostFtdcTraderSpi_Trait_OnFrontConnected(rust); }
void Rust_CThostFtdcTraderSpi::OnFrontDisconnected(int nReason) { return Rust_CThostFtdcTraderSpi_Trait_OnFrontDisconnected(rust, nReason); }
void Rust_CThostFtdcTraderSpi::OnHeartBeatWarning(int nTimeLapse) { return Rust_CThostFtdcTraderSpi_Trait_OnHeartBeatWarning(rust, nTimeLapse); }
void Rust_CThostFtdcTraderSpi::OnRspAuthenticate(CThostFtdcRspAuthenticateField * pRspAuthenticateField, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspAuthenticate(rust, pRspAuthenticateField, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspUserLogin(CThostFtdcRspUserLoginField * pRspUserLogin, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspUserLogin(rust, pRspUserLogin, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspUserLogout(CThostFtdcUserLogoutField * pUserLogout, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspUserLogout(rust, pUserLogout, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspUserPasswordUpdate(CThostFtdcUserPasswordUpdateField * pUserPasswordUpdate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspUserPasswordUpdate(rust, pUserPasswordUpdate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField * pTradingAccountPasswordUpdate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspTradingAccountPasswordUpdate(rust, pTradingAccountPasswordUpdate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspUserAuthMethod(CThostFtdcRspUserAuthMethodField * pRspUserAuthMethod, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspUserAuthMethod(rust, pRspUserAuthMethod, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspGenUserCaptcha(CThostFtdcRspGenUserCaptchaField * pRspGenUserCaptcha, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspGenUserCaptcha(rust, pRspGenUserCaptcha, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspGenUserText(CThostFtdcRspGenUserTextField * pRspGenUserText, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspGenUserText(rust, pRspGenUserText, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspOrderInsert(CThostFtdcInputOrderField * pInputOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspOrderInsert(rust, pInputOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspParkedOrderInsert(CThostFtdcParkedOrderField * pParkedOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspParkedOrderInsert(rust, pParkedOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspParkedOrderAction(CThostFtdcParkedOrderActionField * pParkedOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspParkedOrderAction(rust, pParkedOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspOrderAction(CThostFtdcInputOrderActionField * pInputOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspOrderAction(rust, pInputOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryMaxOrderVolume(CThostFtdcQryMaxOrderVolumeField * pQryMaxOrderVolume, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryMaxOrderVolume(rust, pQryMaxOrderVolume, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField * pSettlementInfoConfirm, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspSettlementInfoConfirm(rust, pSettlementInfoConfirm, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspRemoveParkedOrder(CThostFtdcRemoveParkedOrderField * pRemoveParkedOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspRemoveParkedOrder(rust, pRemoveParkedOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField * pRemoveParkedOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspRemoveParkedOrderAction(rust, pRemoveParkedOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspExecOrderInsert(CThostFtdcInputExecOrderField * pInputExecOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspExecOrderInsert(rust, pInputExecOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspExecOrderAction(CThostFtdcInputExecOrderActionField * pInputExecOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspExecOrderAction(rust, pInputExecOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspForQuoteInsert(CThostFtdcInputForQuoteField * pInputForQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspForQuoteInsert(rust, pInputForQuote, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQuoteInsert(CThostFtdcInputQuoteField * pInputQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQuoteInsert(rust, pInputQuote, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQuoteAction(CThostFtdcInputQuoteActionField * pInputQuoteAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQuoteAction(rust, pInputQuoteAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspBatchOrderAction(CThostFtdcInputBatchOrderActionField * pInputBatchOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspBatchOrderAction(rust, pInputBatchOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField * pInputOptionSelfClose, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspOptionSelfCloseInsert(rust, pInputOptionSelfClose, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspOptionSelfCloseAction(CThostFtdcInputOptionSelfCloseActionField * pInputOptionSelfCloseAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspOptionSelfCloseAction(rust, pInputOptionSelfCloseAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspCombActionInsert(CThostFtdcInputCombActionField * pInputCombAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspCombActionInsert(rust, pInputCombAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryOrder(CThostFtdcOrderField * pOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryOrder(rust, pOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTrade(CThostFtdcTradeField * pTrade, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTrade(rust, pTrade, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorPosition(CThostFtdcInvestorPositionField * pInvestorPosition, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPosition(rust, pInvestorPosition, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTradingAccount(CThostFtdcTradingAccountField * pTradingAccount, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTradingAccount(rust, pTradingAccount, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestor(CThostFtdcInvestorField * pInvestor, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestor(rust, pInvestor, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTradingCode(CThostFtdcTradingCodeField * pTradingCode, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTradingCode(rust, pTradingCode, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInstrumentMarginRate(CThostFtdcInstrumentMarginRateField * pInstrumentMarginRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrumentMarginRate(rust, pInstrumentMarginRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInstrumentCommissionRate(CThostFtdcInstrumentCommissionRateField * pInstrumentCommissionRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrumentCommissionRate(rust, pInstrumentCommissionRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryExchange(CThostFtdcExchangeField * pExchange, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchange(rust, pExchange, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryProduct(CThostFtdcProductField * pProduct, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryProduct(rust, pProduct, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInstrument(CThostFtdcInstrumentField * pInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrument(rust, pInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryDepthMarketData(CThostFtdcDepthMarketDataField * pDepthMarketData, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryDepthMarketData(rust, pDepthMarketData, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTraderOffer(CThostFtdcTraderOfferField * pTraderOffer, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTraderOffer(rust, pTraderOffer, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySettlementInfo(CThostFtdcSettlementInfoField * pSettlementInfo, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySettlementInfo(rust, pSettlementInfo, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTransferBank(CThostFtdcTransferBankField * pTransferBank, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTransferBank(rust, pTransferBank, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorPositionDetail(CThostFtdcInvestorPositionDetailField * pInvestorPositionDetail, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPositionDetail(rust, pInvestorPositionDetail, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryNotice(CThostFtdcNoticeField * pNotice, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryNotice(rust, pNotice, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField * pSettlementInfoConfirm, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySettlementInfoConfirm(rust, pSettlementInfoConfirm, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorPositionCombineDetail(CThostFtdcInvestorPositionCombineDetailField * pInvestorPositionCombineDetail, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPositionCombineDetail(rust, pInvestorPositionCombineDetail, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryCFMMCTradingAccountKey(CThostFtdcCFMMCTradingAccountKeyField * pCFMMCTradingAccountKey, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryCFMMCTradingAccountKey(rust, pCFMMCTradingAccountKey, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryEWarrantOffset(CThostFtdcEWarrantOffsetField * pEWarrantOffset, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryEWarrantOffset(rust, pEWarrantOffset, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorProductGroupMargin(CThostFtdcInvestorProductGroupMarginField * pInvestorProductGroupMargin, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorProductGroupMargin(rust, pInvestorProductGroupMargin, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryExchangeMarginRate(CThostFtdcExchangeMarginRateField * pExchangeMarginRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchangeMarginRate(rust, pExchangeMarginRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryExchangeMarginRateAdjust(CThostFtdcExchangeMarginRateAdjustField * pExchangeMarginRateAdjust, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchangeMarginRateAdjust(rust, pExchangeMarginRateAdjust, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryExchangeRate(CThostFtdcExchangeRateField * pExchangeRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchangeRate(rust, pExchangeRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySecAgentACIDMap(CThostFtdcSecAgentACIDMapField * pSecAgentACIDMap, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentACIDMap(rust, pSecAgentACIDMap, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryProductExchRate(CThostFtdcProductExchRateField * pProductExchRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryProductExchRate(rust, pProductExchRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryProductGroup(CThostFtdcProductGroupField * pProductGroup, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryProductGroup(rust, pProductGroup, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryMMInstrumentCommissionRate(CThostFtdcMMInstrumentCommissionRateField * pMMInstrumentCommissionRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryMMInstrumentCommissionRate(rust, pMMInstrumentCommissionRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryMMOptionInstrCommRate(CThostFtdcMMOptionInstrCommRateField * pMMOptionInstrCommRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryMMOptionInstrCommRate(rust, pMMOptionInstrCommRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInstrumentOrderCommRate(CThostFtdcInstrumentOrderCommRateField * pInstrumentOrderCommRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrumentOrderCommRate(rust, pInstrumentOrderCommRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySecAgentTradingAccount(CThostFtdcTradingAccountField * pTradingAccount, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentTradingAccount(rust, pTradingAccount, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySecAgentCheckMode(CThostFtdcSecAgentCheckModeField * pSecAgentCheckMode, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentCheckMode(rust, pSecAgentCheckMode, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySecAgentTradeInfo(CThostFtdcSecAgentTradeInfoField * pSecAgentTradeInfo, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentTradeInfo(rust, pSecAgentTradeInfo, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryOptionInstrTradeCost(CThostFtdcOptionInstrTradeCostField * pOptionInstrTradeCost, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryOptionInstrTradeCost(rust, pOptionInstrTradeCost, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryOptionInstrCommRate(CThostFtdcOptionInstrCommRateField * pOptionInstrCommRate, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryOptionInstrCommRate(rust, pOptionInstrCommRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryExecOrder(CThostFtdcExecOrderField * pExecOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryExecOrder(rust, pExecOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryForQuote(CThostFtdcForQuoteField * pForQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryForQuote(rust, pForQuote, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryQuote(CThostFtdcQuoteField * pQuote, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryQuote(rust, pQuote, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryOptionSelfClose(CThostFtdcOptionSelfCloseField * pOptionSelfClose, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryOptionSelfClose(rust, pOptionSelfClose, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestUnit(CThostFtdcInvestUnitField * pInvestUnit, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestUnit(rust, pInvestUnit, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryCombInstrumentGuard(CThostFtdcCombInstrumentGuardField * pCombInstrumentGuard, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryCombInstrumentGuard(rust, pCombInstrumentGuard, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryCombAction(CThostFtdcCombActionField * pCombAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryCombAction(rust, pCombAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTransferSerial(CThostFtdcTransferSerialField * pTransferSerial, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTransferSerial(rust, pTransferSerial, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryAccountregister(CThostFtdcAccountregisterField * pAccountregister, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryAccountregister(rust, pAccountregister, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspError(CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspError(rust, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRtnOrder(CThostFtdcOrderField * pOrder) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnOrder(rust, pOrder); }
void Rust_CThostFtdcTraderSpi::OnRtnTrade(CThostFtdcTradeField * pTrade) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnTrade(rust, pTrade); }
void Rust_CThostFtdcTraderSpi::OnErrRtnOrderInsert(CThostFtdcInputOrderField * pInputOrder, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOrderInsert(rust, pInputOrder, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnOrderAction(CThostFtdcOrderActionField * pOrderAction, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOrderAction(rust, pOrderAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnInstrumentStatus(CThostFtdcInstrumentStatusField * pInstrumentStatus) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnInstrumentStatus(rust, pInstrumentStatus); }
void Rust_CThostFtdcTraderSpi::OnRtnBulletin(CThostFtdcBulletinField * pBulletin) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnBulletin(rust, pBulletin); }
void Rust_CThostFtdcTraderSpi::OnRtnTradingNotice(CThostFtdcTradingNoticeInfoField * pTradingNoticeInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnTradingNotice(rust, pTradingNoticeInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnErrorConditionalOrder(CThostFtdcErrorConditionalOrderField * pErrorConditionalOrder) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnErrorConditionalOrder(rust, pErrorConditionalOrder); }
void Rust_CThostFtdcTraderSpi::OnRtnExecOrder(CThostFtdcExecOrderField * pExecOrder) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnExecOrder(rust, pExecOrder); }
void Rust_CThostFtdcTraderSpi::OnErrRtnExecOrderInsert(CThostFtdcInputExecOrderField * pInputExecOrder, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnExecOrderInsert(rust, pInputExecOrder, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnExecOrderAction(CThostFtdcExecOrderActionField * pExecOrderAction, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnExecOrderAction(rust, pExecOrderAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnForQuoteInsert(CThostFtdcInputForQuoteField * pInputForQuote, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnForQuoteInsert(rust, pInputForQuote, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnQuote(CThostFtdcQuoteField * pQuote) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnQuote(rust, pQuote); }
void Rust_CThostFtdcTraderSpi::OnErrRtnQuoteInsert(CThostFtdcInputQuoteField * pInputQuote, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnQuoteInsert(rust, pInputQuote, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnQuoteAction(CThostFtdcQuoteActionField * pQuoteAction, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnQuoteAction(rust, pQuoteAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnForQuoteRsp(CThostFtdcForQuoteRspField * pForQuoteRsp) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnForQuoteRsp(rust, pForQuoteRsp); }
void Rust_CThostFtdcTraderSpi::OnRtnCFMMCTradingAccountToken(CThostFtdcCFMMCTradingAccountTokenField * pCFMMCTradingAccountToken) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnCFMMCTradingAccountToken(rust, pCFMMCTradingAccountToken); }
void Rust_CThostFtdcTraderSpi::OnErrRtnBatchOrderAction(CThostFtdcBatchOrderActionField * pBatchOrderAction, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnBatchOrderAction(rust, pBatchOrderAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnOptionSelfClose(CThostFtdcOptionSelfCloseField * pOptionSelfClose) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnOptionSelfClose(rust, pOptionSelfClose); }
void Rust_CThostFtdcTraderSpi::OnErrRtnOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField * pInputOptionSelfClose, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOptionSelfCloseInsert(rust, pInputOptionSelfClose, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnOptionSelfCloseAction(CThostFtdcOptionSelfCloseActionField * pOptionSelfCloseAction, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOptionSelfCloseAction(rust, pOptionSelfCloseAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnCombAction(CThostFtdcCombActionField * pCombAction) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnCombAction(rust, pCombAction); }
void Rust_CThostFtdcTraderSpi::OnErrRtnCombActionInsert(CThostFtdcInputCombActionField * pInputCombAction, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnCombActionInsert(rust, pInputCombAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRspQryContractBank(CThostFtdcContractBankField * pContractBank, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryContractBank(rust, pContractBank, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryParkedOrder(CThostFtdcParkedOrderField * pParkedOrder, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryParkedOrder(rust, pParkedOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryParkedOrderAction(CThostFtdcParkedOrderActionField * pParkedOrderAction, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryParkedOrderAction(rust, pParkedOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTradingNotice(CThostFtdcTradingNoticeField * pTradingNotice, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTradingNotice(rust, pTradingNotice, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryBrokerTradingParams(CThostFtdcBrokerTradingParamsField * pBrokerTradingParams, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryBrokerTradingParams(rust, pBrokerTradingParams, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryBrokerTradingAlgos(CThostFtdcBrokerTradingAlgosField * pBrokerTradingAlgos, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryBrokerTradingAlgos(rust, pBrokerTradingAlgos, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField * pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQueryCFMMCTradingAccountToken(rust, pQueryCFMMCTradingAccountToken, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRtnFromBankToFutureByBank(CThostFtdcRspTransferField * pRspTransfer) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnFromBankToFutureByBank(rust, pRspTransfer); }
void Rust_CThostFtdcTraderSpi::OnRtnFromFutureToBankByBank(CThostFtdcRspTransferField * pRspTransfer) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnFromFutureToBankByBank(rust, pRspTransfer); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByBank(CThostFtdcRspRepealField * pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromBankToFutureByBank(rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByBank(CThostFtdcRspRepealField * pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromFutureToBankByBank(rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRtnFromBankToFutureByFuture(CThostFtdcRspTransferField * pRspTransfer) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnFromBankToFutureByFuture(rust, pRspTransfer); }
void Rust_CThostFtdcTraderSpi::OnRtnFromFutureToBankByFuture(CThostFtdcRspTransferField * pRspTransfer) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnFromFutureToBankByFuture(rust, pRspTransfer); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFutureManual(CThostFtdcRspRepealField * pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromBankToFutureByFutureManual(rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFutureManual(CThostFtdcRspRepealField * pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromFutureToBankByFutureManual(rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRtnQueryBankBalanceByFuture(CThostFtdcNotifyQueryAccountField * pNotifyQueryAccount) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnQueryBankBalanceByFuture(rust, pNotifyQueryAccount); }
void Rust_CThostFtdcTraderSpi::OnErrRtnBankToFutureByFuture(CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnBankToFutureByFuture(rust, pReqTransfer, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnFutureToBankByFuture(CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnFutureToBankByFuture(rust, pReqTransfer, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnRepealBankToFutureByFutureManual(CThostFtdcReqRepealField * pReqRepeal, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnRepealBankToFutureByFutureManual(rust, pReqRepeal, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnRepealFutureToBankByFutureManual(CThostFtdcReqRepealField * pReqRepeal, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnRepealFutureToBankByFutureManual(rust, pReqRepeal, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnQueryBankBalanceByFuture(CThostFtdcReqQueryAccountField * pReqQueryAccount, CThostFtdcRspInfoField * pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnQueryBankBalanceByFuture(rust, pReqQueryAccount, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFuture(CThostFtdcRspRepealField * pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromBankToFutureByFuture(rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFuture(CThostFtdcRspRepealField * pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromFutureToBankByFuture(rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRspFromBankToFutureByFuture(CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspFromBankToFutureByFuture(rust, pReqTransfer, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspFromFutureToBankByFuture(CThostFtdcReqTransferField * pReqTransfer, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspFromFutureToBankByFuture(rust, pReqTransfer, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField * pReqQueryAccount, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQueryBankAccountMoneyByFuture(rust, pReqQueryAccount, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRtnOpenAccountByBank(CThostFtdcOpenAccountField * pOpenAccount) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnOpenAccountByBank(rust, pOpenAccount); }
void Rust_CThostFtdcTraderSpi::OnRtnCancelAccountByBank(CThostFtdcCancelAccountField * pCancelAccount) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnCancelAccountByBank(rust, pCancelAccount); }
void Rust_CThostFtdcTraderSpi::OnRtnChangeAccountByBank(CThostFtdcChangeAccountField * pChangeAccount) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnChangeAccountByBank(rust, pChangeAccount); }
void Rust_CThostFtdcTraderSpi::OnRspQryClassifiedInstrument(CThostFtdcInstrumentField * pInstrument, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryClassifiedInstrument(rust, pInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryCombPromotionParam(CThostFtdcCombPromotionParamField * pCombPromotionParam, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryCombPromotionParam(rust, pCombPromotionParam, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRiskSettleInvstPosition(CThostFtdcRiskSettleInvstPositionField * pRiskSettleInvstPosition, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRiskSettleInvstPosition(rust, pRiskSettleInvstPosition, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRiskSettleProductStatus(CThostFtdcRiskSettleProductStatusField * pRiskSettleProductStatus, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRiskSettleProductStatus(rust, pRiskSettleProductStatus, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMFutureParameter(CThostFtdcSPBMFutureParameterField * pSPBMFutureParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMFutureParameter(rust, pSPBMFutureParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMOptionParameter(CThostFtdcSPBMOptionParameterField * pSPBMOptionParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMOptionParameter(rust, pSPBMOptionParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMIntraParameter(CThostFtdcSPBMIntraParameterField * pSPBMIntraParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMIntraParameter(rust, pSPBMIntraParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMInterParameter(CThostFtdcSPBMInterParameterField * pSPBMInterParameter, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMInterParameter(rust, pSPBMInterParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMPortfDefinition(CThostFtdcSPBMPortfDefinitionField * pSPBMPortfDefinition, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMPortfDefinition(rust, pSPBMPortfDefinition, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMInvestorPortfDef(CThostFtdcSPBMInvestorPortfDefField * pSPBMInvestorPortfDef, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMInvestorPortfDef(rust, pSPBMInvestorPortfDef, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorPortfMarginRatio(CThostFtdcInvestorPortfMarginRatioField * pInvestorPortfMarginRatio, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPortfMarginRatio(rust, pInvestorPortfMarginRatio, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorProdSPBMDetail(CThostFtdcInvestorProdSPBMDetailField * pInvestorProdSPBMDetail, CThostFtdcRspInfoField * pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorProdSPBMDetail(rust, pInvestorProdSPBMDetail, pRspInfo, nRequestID, bIsLast); }
Rust_CThostFtdcTraderApi* Rust_CThostFtdcTraderApi::CreateFtdcTraderApi(const char * pszFlowPath) { 
                            Rust_CThostFtdcTraderApi * self = new Rust_CThostFtdcTraderApi();
                            self->inner = CThostFtdcTraderApi::CreateFtdcTraderApi(pszFlowPath);                        
                            return self;
                        }
const char * Rust_CThostFtdcTraderApi::GetApiVersion() { return CThostFtdcTraderApi::GetApiVersion(); }
void Rust_CThostFtdcTraderApi::Release() { return inner->Release(); }
void Rust_CThostFtdcTraderApi::Init() { return inner->Init(); }
int Rust_CThostFtdcTraderApi::Join() { return inner->Join(); }
const char * Rust_CThostFtdcTraderApi::GetTradingDay() { return inner->GetTradingDay(); }
void Rust_CThostFtdcTraderApi::RegisterFront(char * pszFrontAddress) { return inner->RegisterFront(pszFrontAddress); }
void Rust_CThostFtdcTraderApi::RegisterNameServer(char * pszNsAddress) { return inner->RegisterNameServer(pszNsAddress); }
void Rust_CThostFtdcTraderApi::RegisterFensUserInfo(CThostFtdcFensUserInfoField * pFensUserInfo) { return inner->RegisterFensUserInfo(pFensUserInfo); }
void Rust_CThostFtdcTraderApi::RegisterSpi(CThostFtdcTraderSpi * pSpi) { return inner->RegisterSpi(pSpi); }
void Rust_CThostFtdcTraderApi::SubscribePrivateTopic(THOST_TE_RESUME_TYPE nResumeType) { return inner->SubscribePrivateTopic(nResumeType); }
void Rust_CThostFtdcTraderApi::SubscribePublicTopic(THOST_TE_RESUME_TYPE nResumeType) { return inner->SubscribePublicTopic(nResumeType); }
int Rust_CThostFtdcTraderApi::ReqAuthenticate(CThostFtdcReqAuthenticateField * pReqAuthenticateField, int nRequestID) { return inner->ReqAuthenticate(pReqAuthenticateField, nRequestID); }
int Rust_CThostFtdcTraderApi::RegisterUserSystemInfo(CThostFtdcUserSystemInfoField * pUserSystemInfo) { return inner->RegisterUserSystemInfo(pUserSystemInfo); }
int Rust_CThostFtdcTraderApi::SubmitUserSystemInfo(CThostFtdcUserSystemInfoField * pUserSystemInfo) { return inner->SubmitUserSystemInfo(pUserSystemInfo); }
int Rust_CThostFtdcTraderApi::ReqUserLogin(CThostFtdcReqUserLoginField * pReqUserLoginField, int nRequestID) { return inner->ReqUserLogin(pReqUserLoginField, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserLogout(CThostFtdcUserLogoutField * pUserLogout, int nRequestID) { return inner->ReqUserLogout(pUserLogout, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserPasswordUpdate(CThostFtdcUserPasswordUpdateField * pUserPasswordUpdate, int nRequestID) { return inner->ReqUserPasswordUpdate(pUserPasswordUpdate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField * pTradingAccountPasswordUpdate, int nRequestID) { return inner->ReqTradingAccountPasswordUpdate(pTradingAccountPasswordUpdate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserAuthMethod(CThostFtdcReqUserAuthMethodField * pReqUserAuthMethod, int nRequestID) { return inner->ReqUserAuthMethod(pReqUserAuthMethod, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqGenUserCaptcha(CThostFtdcReqGenUserCaptchaField * pReqGenUserCaptcha, int nRequestID) { return inner->ReqGenUserCaptcha(pReqGenUserCaptcha, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqGenUserText(CThostFtdcReqGenUserTextField * pReqGenUserText, int nRequestID) { return inner->ReqGenUserText(pReqGenUserText, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserLoginWithCaptcha(CThostFtdcReqUserLoginWithCaptchaField * pReqUserLoginWithCaptcha, int nRequestID) { return inner->ReqUserLoginWithCaptcha(pReqUserLoginWithCaptcha, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserLoginWithText(CThostFtdcReqUserLoginWithTextField * pReqUserLoginWithText, int nRequestID) { return inner->ReqUserLoginWithText(pReqUserLoginWithText, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserLoginWithOTP(CThostFtdcReqUserLoginWithOTPField * pReqUserLoginWithOTP, int nRequestID) { return inner->ReqUserLoginWithOTP(pReqUserLoginWithOTP, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqOrderInsert(CThostFtdcInputOrderField * pInputOrder, int nRequestID) { return inner->ReqOrderInsert(pInputOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqParkedOrderInsert(CThostFtdcParkedOrderField * pParkedOrder, int nRequestID) { return inner->ReqParkedOrderInsert(pParkedOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqParkedOrderAction(CThostFtdcParkedOrderActionField * pParkedOrderAction, int nRequestID) { return inner->ReqParkedOrderAction(pParkedOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqOrderAction(CThostFtdcInputOrderActionField * pInputOrderAction, int nRequestID) { return inner->ReqOrderAction(pInputOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryMaxOrderVolume(CThostFtdcQryMaxOrderVolumeField * pQryMaxOrderVolume, int nRequestID) { return inner->ReqQryMaxOrderVolume(pQryMaxOrderVolume, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField * pSettlementInfoConfirm, int nRequestID) { return inner->ReqSettlementInfoConfirm(pSettlementInfoConfirm, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqRemoveParkedOrder(CThostFtdcRemoveParkedOrderField * pRemoveParkedOrder, int nRequestID) { return inner->ReqRemoveParkedOrder(pRemoveParkedOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField * pRemoveParkedOrderAction, int nRequestID) { return inner->ReqRemoveParkedOrderAction(pRemoveParkedOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqExecOrderInsert(CThostFtdcInputExecOrderField * pInputExecOrder, int nRequestID) { return inner->ReqExecOrderInsert(pInputExecOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqExecOrderAction(CThostFtdcInputExecOrderActionField * pInputExecOrderAction, int nRequestID) { return inner->ReqExecOrderAction(pInputExecOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqForQuoteInsert(CThostFtdcInputForQuoteField * pInputForQuote, int nRequestID) { return inner->ReqForQuoteInsert(pInputForQuote, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQuoteInsert(CThostFtdcInputQuoteField * pInputQuote, int nRequestID) { return inner->ReqQuoteInsert(pInputQuote, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQuoteAction(CThostFtdcInputQuoteActionField * pInputQuoteAction, int nRequestID) { return inner->ReqQuoteAction(pInputQuoteAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqBatchOrderAction(CThostFtdcInputBatchOrderActionField * pInputBatchOrderAction, int nRequestID) { return inner->ReqBatchOrderAction(pInputBatchOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField * pInputOptionSelfClose, int nRequestID) { return inner->ReqOptionSelfCloseInsert(pInputOptionSelfClose, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqOptionSelfCloseAction(CThostFtdcInputOptionSelfCloseActionField * pInputOptionSelfCloseAction, int nRequestID) { return inner->ReqOptionSelfCloseAction(pInputOptionSelfCloseAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqCombActionInsert(CThostFtdcInputCombActionField * pInputCombAction, int nRequestID) { return inner->ReqCombActionInsert(pInputCombAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryOrder(CThostFtdcQryOrderField * pQryOrder, int nRequestID) { return inner->ReqQryOrder(pQryOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTrade(CThostFtdcQryTradeField * pQryTrade, int nRequestID) { return inner->ReqQryTrade(pQryTrade, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorPosition(CThostFtdcQryInvestorPositionField * pQryInvestorPosition, int nRequestID) { return inner->ReqQryInvestorPosition(pQryInvestorPosition, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTradingAccount(CThostFtdcQryTradingAccountField * pQryTradingAccount, int nRequestID) { return inner->ReqQryTradingAccount(pQryTradingAccount, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestor(CThostFtdcQryInvestorField * pQryInvestor, int nRequestID) { return inner->ReqQryInvestor(pQryInvestor, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTradingCode(CThostFtdcQryTradingCodeField * pQryTradingCode, int nRequestID) { return inner->ReqQryTradingCode(pQryTradingCode, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInstrumentMarginRate(CThostFtdcQryInstrumentMarginRateField * pQryInstrumentMarginRate, int nRequestID) { return inner->ReqQryInstrumentMarginRate(pQryInstrumentMarginRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInstrumentCommissionRate(CThostFtdcQryInstrumentCommissionRateField * pQryInstrumentCommissionRate, int nRequestID) { return inner->ReqQryInstrumentCommissionRate(pQryInstrumentCommissionRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryExchange(CThostFtdcQryExchangeField * pQryExchange, int nRequestID) { return inner->ReqQryExchange(pQryExchange, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryProduct(CThostFtdcQryProductField * pQryProduct, int nRequestID) { return inner->ReqQryProduct(pQryProduct, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInstrument(CThostFtdcQryInstrumentField * pQryInstrument, int nRequestID) { return inner->ReqQryInstrument(pQryInstrument, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryDepthMarketData(CThostFtdcQryDepthMarketDataField * pQryDepthMarketData, int nRequestID) { return inner->ReqQryDepthMarketData(pQryDepthMarketData, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTraderOffer(CThostFtdcQryTraderOfferField * pQryTraderOffer, int nRequestID) { return inner->ReqQryTraderOffer(pQryTraderOffer, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySettlementInfo(CThostFtdcQrySettlementInfoField * pQrySettlementInfo, int nRequestID) { return inner->ReqQrySettlementInfo(pQrySettlementInfo, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTransferBank(CThostFtdcQryTransferBankField * pQryTransferBank, int nRequestID) { return inner->ReqQryTransferBank(pQryTransferBank, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorPositionDetail(CThostFtdcQryInvestorPositionDetailField * pQryInvestorPositionDetail, int nRequestID) { return inner->ReqQryInvestorPositionDetail(pQryInvestorPositionDetail, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryNotice(CThostFtdcQryNoticeField * pQryNotice, int nRequestID) { return inner->ReqQryNotice(pQryNotice, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySettlementInfoConfirm(CThostFtdcQrySettlementInfoConfirmField * pQrySettlementInfoConfirm, int nRequestID) { return inner->ReqQrySettlementInfoConfirm(pQrySettlementInfoConfirm, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorPositionCombineDetail(CThostFtdcQryInvestorPositionCombineDetailField * pQryInvestorPositionCombineDetail, int nRequestID) { return inner->ReqQryInvestorPositionCombineDetail(pQryInvestorPositionCombineDetail, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryCFMMCTradingAccountKey(CThostFtdcQryCFMMCTradingAccountKeyField * pQryCFMMCTradingAccountKey, int nRequestID) { return inner->ReqQryCFMMCTradingAccountKey(pQryCFMMCTradingAccountKey, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryEWarrantOffset(CThostFtdcQryEWarrantOffsetField * pQryEWarrantOffset, int nRequestID) { return inner->ReqQryEWarrantOffset(pQryEWarrantOffset, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorProductGroupMargin(CThostFtdcQryInvestorProductGroupMarginField * pQryInvestorProductGroupMargin, int nRequestID) { return inner->ReqQryInvestorProductGroupMargin(pQryInvestorProductGroupMargin, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryExchangeMarginRate(CThostFtdcQryExchangeMarginRateField * pQryExchangeMarginRate, int nRequestID) { return inner->ReqQryExchangeMarginRate(pQryExchangeMarginRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryExchangeMarginRateAdjust(CThostFtdcQryExchangeMarginRateAdjustField * pQryExchangeMarginRateAdjust, int nRequestID) { return inner->ReqQryExchangeMarginRateAdjust(pQryExchangeMarginRateAdjust, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryExchangeRate(CThostFtdcQryExchangeRateField * pQryExchangeRate, int nRequestID) { return inner->ReqQryExchangeRate(pQryExchangeRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySecAgentACIDMap(CThostFtdcQrySecAgentACIDMapField * pQrySecAgentACIDMap, int nRequestID) { return inner->ReqQrySecAgentACIDMap(pQrySecAgentACIDMap, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryProductExchRate(CThostFtdcQryProductExchRateField * pQryProductExchRate, int nRequestID) { return inner->ReqQryProductExchRate(pQryProductExchRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryProductGroup(CThostFtdcQryProductGroupField * pQryProductGroup, int nRequestID) { return inner->ReqQryProductGroup(pQryProductGroup, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryMMInstrumentCommissionRate(CThostFtdcQryMMInstrumentCommissionRateField * pQryMMInstrumentCommissionRate, int nRequestID) { return inner->ReqQryMMInstrumentCommissionRate(pQryMMInstrumentCommissionRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryMMOptionInstrCommRate(CThostFtdcQryMMOptionInstrCommRateField * pQryMMOptionInstrCommRate, int nRequestID) { return inner->ReqQryMMOptionInstrCommRate(pQryMMOptionInstrCommRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInstrumentOrderCommRate(CThostFtdcQryInstrumentOrderCommRateField * pQryInstrumentOrderCommRate, int nRequestID) { return inner->ReqQryInstrumentOrderCommRate(pQryInstrumentOrderCommRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySecAgentTradingAccount(CThostFtdcQryTradingAccountField * pQryTradingAccount, int nRequestID) { return inner->ReqQrySecAgentTradingAccount(pQryTradingAccount, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySecAgentCheckMode(CThostFtdcQrySecAgentCheckModeField * pQrySecAgentCheckMode, int nRequestID) { return inner->ReqQrySecAgentCheckMode(pQrySecAgentCheckMode, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySecAgentTradeInfo(CThostFtdcQrySecAgentTradeInfoField * pQrySecAgentTradeInfo, int nRequestID) { return inner->ReqQrySecAgentTradeInfo(pQrySecAgentTradeInfo, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryOptionInstrTradeCost(CThostFtdcQryOptionInstrTradeCostField * pQryOptionInstrTradeCost, int nRequestID) { return inner->ReqQryOptionInstrTradeCost(pQryOptionInstrTradeCost, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryOptionInstrCommRate(CThostFtdcQryOptionInstrCommRateField * pQryOptionInstrCommRate, int nRequestID) { return inner->ReqQryOptionInstrCommRate(pQryOptionInstrCommRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryExecOrder(CThostFtdcQryExecOrderField * pQryExecOrder, int nRequestID) { return inner->ReqQryExecOrder(pQryExecOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryForQuote(CThostFtdcQryForQuoteField * pQryForQuote, int nRequestID) { return inner->ReqQryForQuote(pQryForQuote, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryQuote(CThostFtdcQryQuoteField * pQryQuote, int nRequestID) { return inner->ReqQryQuote(pQryQuote, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryOptionSelfClose(CThostFtdcQryOptionSelfCloseField * pQryOptionSelfClose, int nRequestID) { return inner->ReqQryOptionSelfClose(pQryOptionSelfClose, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestUnit(CThostFtdcQryInvestUnitField * pQryInvestUnit, int nRequestID) { return inner->ReqQryInvestUnit(pQryInvestUnit, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryCombInstrumentGuard(CThostFtdcQryCombInstrumentGuardField * pQryCombInstrumentGuard, int nRequestID) { return inner->ReqQryCombInstrumentGuard(pQryCombInstrumentGuard, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryCombAction(CThostFtdcQryCombActionField * pQryCombAction, int nRequestID) { return inner->ReqQryCombAction(pQryCombAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTransferSerial(CThostFtdcQryTransferSerialField * pQryTransferSerial, int nRequestID) { return inner->ReqQryTransferSerial(pQryTransferSerial, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryAccountregister(CThostFtdcQryAccountregisterField * pQryAccountregister, int nRequestID) { return inner->ReqQryAccountregister(pQryAccountregister, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryContractBank(CThostFtdcQryContractBankField * pQryContractBank, int nRequestID) { return inner->ReqQryContractBank(pQryContractBank, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryParkedOrder(CThostFtdcQryParkedOrderField * pQryParkedOrder, int nRequestID) { return inner->ReqQryParkedOrder(pQryParkedOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryParkedOrderAction(CThostFtdcQryParkedOrderActionField * pQryParkedOrderAction, int nRequestID) { return inner->ReqQryParkedOrderAction(pQryParkedOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTradingNotice(CThostFtdcQryTradingNoticeField * pQryTradingNotice, int nRequestID) { return inner->ReqQryTradingNotice(pQryTradingNotice, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryBrokerTradingParams(CThostFtdcQryBrokerTradingParamsField * pQryBrokerTradingParams, int nRequestID) { return inner->ReqQryBrokerTradingParams(pQryBrokerTradingParams, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryBrokerTradingAlgos(CThostFtdcQryBrokerTradingAlgosField * pQryBrokerTradingAlgos, int nRequestID) { return inner->ReqQryBrokerTradingAlgos(pQryBrokerTradingAlgos, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField * pQueryCFMMCTradingAccountToken, int nRequestID) { return inner->ReqQueryCFMMCTradingAccountToken(pQueryCFMMCTradingAccountToken, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqFromBankToFutureByFuture(CThostFtdcReqTransferField * pReqTransfer, int nRequestID) { return inner->ReqFromBankToFutureByFuture(pReqTransfer, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqFromFutureToBankByFuture(CThostFtdcReqTransferField * pReqTransfer, int nRequestID) { return inner->ReqFromFutureToBankByFuture(pReqTransfer, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField * pReqQueryAccount, int nRequestID) { return inner->ReqQueryBankAccountMoneyByFuture(pReqQueryAccount, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryClassifiedInstrument(CThostFtdcQryClassifiedInstrumentField * pQryClassifiedInstrument, int nRequestID) { return inner->ReqQryClassifiedInstrument(pQryClassifiedInstrument, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryCombPromotionParam(CThostFtdcQryCombPromotionParamField * pQryCombPromotionParam, int nRequestID) { return inner->ReqQryCombPromotionParam(pQryCombPromotionParam, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRiskSettleInvstPosition(CThostFtdcQryRiskSettleInvstPositionField * pQryRiskSettleInvstPosition, int nRequestID) { return inner->ReqQryRiskSettleInvstPosition(pQryRiskSettleInvstPosition, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRiskSettleProductStatus(CThostFtdcQryRiskSettleProductStatusField * pQryRiskSettleProductStatus, int nRequestID) { return inner->ReqQryRiskSettleProductStatus(pQryRiskSettleProductStatus, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMFutureParameter(CThostFtdcQrySPBMFutureParameterField * pQrySPBMFutureParameter, int nRequestID) { return inner->ReqQrySPBMFutureParameter(pQrySPBMFutureParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMOptionParameter(CThostFtdcQrySPBMOptionParameterField * pQrySPBMOptionParameter, int nRequestID) { return inner->ReqQrySPBMOptionParameter(pQrySPBMOptionParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMIntraParameter(CThostFtdcQrySPBMIntraParameterField * pQrySPBMIntraParameter, int nRequestID) { return inner->ReqQrySPBMIntraParameter(pQrySPBMIntraParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMInterParameter(CThostFtdcQrySPBMInterParameterField * pQrySPBMInterParameter, int nRequestID) { return inner->ReqQrySPBMInterParameter(pQrySPBMInterParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMPortfDefinition(CThostFtdcQrySPBMPortfDefinitionField * pQrySPBMPortfDefinition, int nRequestID) { return inner->ReqQrySPBMPortfDefinition(pQrySPBMPortfDefinition, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMInvestorPortfDef(CThostFtdcQrySPBMInvestorPortfDefField * pQrySPBMInvestorPortfDef, int nRequestID) { return inner->ReqQrySPBMInvestorPortfDef(pQrySPBMInvestorPortfDef, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorPortfMarginRatio(CThostFtdcQryInvestorPortfMarginRatioField * pQryInvestorPortfMarginRatio, int nRequestID) { return inner->ReqQryInvestorPortfMarginRatio(pQryInvestorPortfMarginRatio, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorProdSPBMDetail(CThostFtdcQryInvestorProdSPBMDetailField * pQryInvestorProdSPBMDetail, int nRequestID) { return inner->ReqQryInvestorProdSPBMDetail(pQryInvestorProdSPBMDetail, nRequestID); }
